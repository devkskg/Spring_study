<?xml version="1.0" encoding="UTF-8"?>
<!-- 우리가 사용하는 spring 모듈들 -->
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
	https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		https://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- @Controller가 명시된 클래스를 요청받을 수 있는 객체로 설정 -->
	<annotation-driven/>
	
	<!--
		css, js, 이미지같은 파일(정적인 파일)도 경로가 O
		그래서 얘네들도 HandlerMapping의 탐색 대상이 됨 
		404에러(파일을 찾지 못함) 발생 : Controller가 아니기 때문!
		그래서 해충약 뿌려줌. resources 하위 경로 파일들은 HandlerMapping 접근하지 마세요~
		resources : 정적인 파일들이 위치하는 경로라고 설정해놨음.
	-->
	<resources location="/resources/" mapping="/resources/**"/>
	
	<!-- 요청 -> DispatcherServlet -> HandlerMapping -> HandlerAdapter -> ViewResolver
		만약 이렇게 써있다? return "home" (home이라는 문자열 반환) 
		prefix로 앞에 넣어주고 suffix로 뒤에 넣어준다.
		결국 이렇게 나온다. /WEB-INF/views/home..jsp -->
	<beans:bean 
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Spring이 Bean으로 등록할 클래스들을 찾기 시작하는 최상위 경로
		com.gn부터 Spring의 관리대상으로? 해줄거에요~ 라는 뜻 -->
	<context:component-scan base-package="com.gn" />
</beans:beans>